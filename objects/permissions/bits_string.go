// Code generated by "enumer -type=PermissionBit -trimprefix=PermissionBit -output bits_string.go"; DO NOT EDIT.

package permissions

import (
	"fmt"
)

const _PermissionBitName = "CreateInstantInviteKickMembersBanMembersAdministratorManageChannelsManageGuildAddReactionsViewAuditLogPrioritySpeakerStreamViewChannelSendMessagesSendTTSMessagesManageMessagesEmbedLinksAttachFilesReadMessageHistoryMentionEveryoneUseExternalEmojisViewGuildInsightsConnectSpeakMuteMembersDeafenMembersMoveMembersUseVADChangeNicknameManageNicknamesManageRolesManageWebhooksManageEmojisAndStickersUseApplicationCommandsRequestToSpeakManageEventsManageThreadsCreatePublicThreadsCreatePrivateThreadsUseExternalStickersSendMessagesInThreadsStartEmbeddedActivitiesModerateMembers"

var _PermissionBitMap = map[PermissionBit]string{
	1:             _PermissionBitName[0:19],
	2:             _PermissionBitName[19:30],
	4:             _PermissionBitName[30:40],
	8:             _PermissionBitName[40:53],
	16:            _PermissionBitName[53:67],
	32:            _PermissionBitName[67:78],
	64:            _PermissionBitName[78:90],
	128:           _PermissionBitName[90:102],
	256:           _PermissionBitName[102:117],
	512:           _PermissionBitName[117:123],
	1024:          _PermissionBitName[123:134],
	2048:          _PermissionBitName[134:146],
	4096:          _PermissionBitName[146:161],
	8192:          _PermissionBitName[161:175],
	16384:         _PermissionBitName[175:185],
	32768:         _PermissionBitName[185:196],
	65536:         _PermissionBitName[196:214],
	131072:        _PermissionBitName[214:229],
	262144:        _PermissionBitName[229:246],
	524288:        _PermissionBitName[246:263],
	1048576:       _PermissionBitName[263:270],
	2097152:       _PermissionBitName[270:275],
	4194304:       _PermissionBitName[275:286],
	8388608:       _PermissionBitName[286:299],
	16777216:      _PermissionBitName[299:310],
	33554432:      _PermissionBitName[310:316],
	67108864:      _PermissionBitName[316:330],
	134217728:     _PermissionBitName[330:345],
	268435456:     _PermissionBitName[345:356],
	536870912:     _PermissionBitName[356:370],
	1073741824:    _PermissionBitName[370:393],
	2147483648:    _PermissionBitName[393:415],
	4294967296:    _PermissionBitName[415:429],
	8589934592:    _PermissionBitName[429:441],
	17179869184:   _PermissionBitName[441:454],
	34359738368:   _PermissionBitName[454:473],
	68719476736:   _PermissionBitName[473:493],
	137438953472:  _PermissionBitName[493:512],
	274877906944:  _PermissionBitName[512:533],
	549755813888:  _PermissionBitName[533:556],
	1099511627776: _PermissionBitName[556:571],
}

func (i PermissionBit) String() string {
	if str, ok := _PermissionBitMap[i]; ok {
		return str
	}
	return fmt.Sprintf("PermissionBit(%d)", i)
}

var _PermissionBitValues = []PermissionBit{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, 4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 549755813888, 1099511627776}

var _PermissionBitNameToValueMap = map[string]PermissionBit{
	_PermissionBitName[0:19]:    1,
	_PermissionBitName[19:30]:   2,
	_PermissionBitName[30:40]:   4,
	_PermissionBitName[40:53]:   8,
	_PermissionBitName[53:67]:   16,
	_PermissionBitName[67:78]:   32,
	_PermissionBitName[78:90]:   64,
	_PermissionBitName[90:102]:  128,
	_PermissionBitName[102:117]: 256,
	_PermissionBitName[117:123]: 512,
	_PermissionBitName[123:134]: 1024,
	_PermissionBitName[134:146]: 2048,
	_PermissionBitName[146:161]: 4096,
	_PermissionBitName[161:175]: 8192,
	_PermissionBitName[175:185]: 16384,
	_PermissionBitName[185:196]: 32768,
	_PermissionBitName[196:214]: 65536,
	_PermissionBitName[214:229]: 131072,
	_PermissionBitName[229:246]: 262144,
	_PermissionBitName[246:263]: 524288,
	_PermissionBitName[263:270]: 1048576,
	_PermissionBitName[270:275]: 2097152,
	_PermissionBitName[275:286]: 4194304,
	_PermissionBitName[286:299]: 8388608,
	_PermissionBitName[299:310]: 16777216,
	_PermissionBitName[310:316]: 33554432,
	_PermissionBitName[316:330]: 67108864,
	_PermissionBitName[330:345]: 134217728,
	_PermissionBitName[345:356]: 268435456,
	_PermissionBitName[356:370]: 536870912,
	_PermissionBitName[370:393]: 1073741824,
	_PermissionBitName[393:415]: 2147483648,
	_PermissionBitName[415:429]: 4294967296,
	_PermissionBitName[429:441]: 8589934592,
	_PermissionBitName[441:454]: 17179869184,
	_PermissionBitName[454:473]: 34359738368,
	_PermissionBitName[473:493]: 68719476736,
	_PermissionBitName[493:512]: 137438953472,
	_PermissionBitName[512:533]: 274877906944,
	_PermissionBitName[533:556]: 549755813888,
	_PermissionBitName[556:571]: 1099511627776,
}

// PermissionBitString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PermissionBitString(s string) (PermissionBit, error) {
	if val, ok := _PermissionBitNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PermissionBit values", s)
}

// PermissionBitValues returns all values of the enum
func PermissionBitValues() []PermissionBit {
	return _PermissionBitValues
}

// IsAPermissionBit returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PermissionBit) IsAPermissionBit() bool {
	_, ok := _PermissionBitMap[i]
	return ok
}
