package commands

import (
	"time"

	"wumpgo.dev/wumpgo/router"
)
{{ if .Features.Codegen }}
//go:generate wumpgoctl gen
{{- end }}

// Ping is a simple command that returns the string "Pong!"
{{- if .Features.Codegen }}
// @Name ping
// @Description Check to see if the bot is responding
// @DM true
{{- end }}
type Ping struct {}

{{- if not .Features.Codegen }}
func (c Ping) CommandName() string {
    return "ping"
}

func (c Ping) Description() string {
    return "Check to see if the bot is responding"
}

func (c Ping) AllowInDMs() bool {
    return true
}
{{- end }}

func (p Ping) Handle(r router.CommandResponder, ctx *router.CommandContext) {
    pingTime := time.Since(ctx.Interaction().ID.CreatedAt().Time)

	r.Contentf("Pong! %s", pingTime.String()).
		View(router.NewView().Add(
			router.NewButton("/ping").Label("Ping Again"),
		))
}

func PingAgain(r router.ComponentResponder, ctx *router.ComponentContext) {
	pingTime := time.Since(ctx.Interaction().ID.CreatedAt().Time)

	r.UpdateMessage().Contentf("Pong! %s", pingTime.String()).
		View(router.NewView().Add(
			router.NewButton("/ping").Label("Ping Again"),
		))
}