// Code generated by {{ .CmdLine }}; DO NOT EDIT.

package {{ .Package }}

import (
    "wumpgo.dev/wumpgo/objects"
    "wumpgo.dev/wumpgo/objects/permissions"
)
{{ with .Structs }}
{{- range .}}
{{- if .CommandName }}

func (c {{ .Name }}) CommandName() string {
    return "{{ .CommandName }}"
}
{{- end }}
{{- if .CommandDescription }}

func (c {{ .Name }}) Description() string {
    return "{{ .CommandDescription }}"
}
{{- end }}
{{- if .NameLocalizations }}

func (c {{ .Name }}) NameLocalizations() map[string]string {
    return map[string]string{
    {{- range $key, $value := .NameLocalizations }}
        "{{ $key }}": "{{ $value }}",
        {{- end }}
    }
}
{{- end }}
{{- if .DescriptionLocalizations }}

func (c {{ .Name }}) DescriptionLocalizations() map[string]string {
    return map[string]string{
    {{- range $key, $value := .DescriptionLocalizations }}
        "{{ $key }}": "{{ $value }}",
    {{- end }}
    }
}
{{- end }}
{{- if .Type }}

func (c {{ .Name }}) Type() objects.ApplicationCommandType {
    return objects.{{ .Type }}
}
{{- end }}
{{- if .OptionNameLocalizations }}

func (c {{ .Name }}) OptionName(optionName string) map[string]string {
    l := map[string]map[string]string{
    {{- range $option, $optionMap := .OptionNameLocalizations }}
        "{{ $option }}": {
        {{- range $locale, $name := $optionMap }}
            "{{ $locale }}": "{{ $name }}",
        {{- end }}
        },
    {{- end }}
    }

    locales, ok := l[optionName]
    if ok {
        return locales
    }

    return map[string]string{}
}
{{- end }}
{{- if .OptionDescriptionLocalizations }}

func (c {{ .Name }}) OptionDescription(optionName string) map[string]string {
    l := map[string]map[string]string{
    {{- range $option, $optionMap := .OptionDescriptionLocalizations }}
        "{{ $option }}": {
        {{- range $locale, $name := $optionMap }}
            "{{ $locale }}": "{{ $name }}",
        {{- end }}
        },
    {{- end }}
    }

    locales, ok := l[optionName]
    if ok {
        return locales
    }

    return map[string]string{}
}
{{- end }}
{{- if .DM }}

func (c {{ .Name }}) AllowInDMs() bool {
    return true
}
{{- end }}
{{- if .DefaultPerms }}

func (c {{ .Name }}) DefaultPermissions() permissions.PermissionBit {
    return permissions.{{ .DefaultPerms }}
}
{{- end }}
{{- end }}
{{- end }}