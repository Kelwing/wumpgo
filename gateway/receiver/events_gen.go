// Code generated by generator, DO NOT EDIT.
package receiver

import (
	"context"
	"fmt"
	objects "wumpgo.dev/wumpgo/objects"
	rest "wumpgo.dev/wumpgo/rest"
)

func eventHandlerToEvent(h HandlerFunc) (EventHandlerIface, string, error) {
	switch v := h.(type) {
	case func(context.Context, *rest.Client, *objects.Ready):
		return newHandler(v), "ready", nil
	case func(context.Context, *rest.Client, *objects.ApplicationCommandPermissionsUpdate):
		return newHandler(v), "application_command_permissions_update", nil
	case func(context.Context, *rest.Client, *objects.AutoModerationRuleCreate):
		return newHandler(v), "auto_moderation_rule_create", nil
	case func(context.Context, *rest.Client, *objects.AutoModerationRuleUpdate):
		return newHandler(v), "auto_moderation_rule_update", nil
	case func(context.Context, *rest.Client, *objects.AutoModerationRuleDelete):
		return newHandler(v), "auto_moderation_rule_delete", nil
	case func(context.Context, *rest.Client, *objects.AutoModerationActionExecution):
		return newHandler(v), "auto_moderation_action_execution", nil
	case func(context.Context, *rest.Client, *objects.ChannelCreate):
		return newHandler(v), "channel_create", nil
	case func(context.Context, *rest.Client, *objects.ChannelUpdate):
		return newHandler(v), "channel_update", nil
	case func(context.Context, *rest.Client, *objects.ChannelDelete):
		return newHandler(v), "channel_delete", nil
	case func(context.Context, *rest.Client, *objects.ChannelPinsUpdate):
		return newHandler(v), "channel_pins_update", nil
	case func(context.Context, *rest.Client, *objects.ThreadCreate):
		return newHandler(v), "thread_create", nil
	case func(context.Context, *rest.Client, *objects.ThreadUpdate):
		return newHandler(v), "thread_update", nil
	case func(context.Context, *rest.Client, *objects.ThreadDelete):
		return newHandler(v), "thread_delete", nil
	case func(context.Context, *rest.Client, *objects.ThreadListSync):
		return newHandler(v), "thread_list_sync", nil
	case func(context.Context, *rest.Client, *objects.ThreadMemberUpdate):
		return newHandler(v), "thread_member_update", nil
	case func(context.Context, *rest.Client, *objects.ThreadMembersUpdate):
		return newHandler(v), "thread_members_update", nil
	case func(context.Context, *rest.Client, *objects.GuildCreate):
		return newHandler(v), "guild_create", nil
	case func(context.Context, *rest.Client, *objects.GuildUpdate):
		return newHandler(v), "guild_update", nil
	case func(context.Context, *rest.Client, *objects.GuildDelete):
		return newHandler(v), "guild_delete", nil
	case func(context.Context, *rest.Client, *objects.GuildAuditLogEntryCreate):
		return newHandler(v), "guild_audit_log_entry_create", nil
	case func(context.Context, *rest.Client, *objects.GuildBanAdd):
		return newHandler(v), "guild_ban_add", nil
	case func(context.Context, *rest.Client, *objects.GuildBanRemove):
		return newHandler(v), "guild_ban_remove", nil
	case func(context.Context, *rest.Client, *objects.GuildEmojisUpdate):
		return newHandler(v), "guild_emojis_update", nil
	case func(context.Context, *rest.Client, *objects.GuildStickersUpdate):
		return newHandler(v), "guild_stickers_update", nil
	case func(context.Context, *rest.Client, *objects.GuildIntegrationsUpdate):
		return newHandler(v), "guild_integrations_update", nil
	case func(context.Context, *rest.Client, *objects.GuildMemberAdd):
		return newHandler(v), "guild_member_add", nil
	case func(context.Context, *rest.Client, *objects.GuildMemberRemove):
		return newHandler(v), "guild_member_remove", nil
	case func(context.Context, *rest.Client, *objects.GuildMemberUpdate):
		return newHandler(v), "guild_member_update", nil
	case func(context.Context, *rest.Client, *objects.GuildMembersChunk):
		return newHandler(v), "guild_members_chunk", nil
	case func(context.Context, *rest.Client, *objects.GuildRoleCreate):
		return newHandler(v), "guild_role_create", nil
	case func(context.Context, *rest.Client, *objects.GuildRoleUpdate):
		return newHandler(v), "guild_role_update", nil
	case func(context.Context, *rest.Client, *objects.GuildRoleDelete):
		return newHandler(v), "guild_role_delete", nil
	case func(context.Context, *rest.Client, *objects.GuildScheduledEventCreate):
		return newHandler(v), "guild_scheduled_event_create", nil
	case func(context.Context, *rest.Client, *objects.GuildScheduledEventUpdate):
		return newHandler(v), "guild_scheduled_event_update", nil
	case func(context.Context, *rest.Client, *objects.GuildScheduledEventDelete):
		return newHandler(v), "guild_scheduled_event_delete", nil
	case func(context.Context, *rest.Client, *objects.GuildScheduledEventUserAdd):
		return newHandler(v), "guild_scheduled_event_user_add", nil
	case func(context.Context, *rest.Client, *objects.GuildScheduledEventUserRemove):
		return newHandler(v), "guild_scheduled_event_user_remove", nil
	case func(context.Context, *rest.Client, *objects.IntegrationCreate):
		return newHandler(v), "integration_create", nil
	case func(context.Context, *rest.Client, *objects.IntegrationUpdate):
		return newHandler(v), "integration_update", nil
	case func(context.Context, *rest.Client, *objects.IntegrationDelete):
		return newHandler(v), "integration_delete", nil
	case func(context.Context, *rest.Client, *objects.InviteCreate):
		return newHandler(v), "invite_create", nil
	case func(context.Context, *rest.Client, *objects.InviteDelete):
		return newHandler(v), "invite_delete", nil
	case func(context.Context, *rest.Client, *objects.MessageCreate):
		return newHandler(v), "message_create", nil
	case func(context.Context, *rest.Client, *objects.MessageUpdate):
		return newHandler(v), "message_update", nil
	case func(context.Context, *rest.Client, *objects.MessageDelete):
		return newHandler(v), "message_delete", nil
	case func(context.Context, *rest.Client, *objects.MessageDeleteBulk):
		return newHandler(v), "message_delete_bulk", nil
	case func(context.Context, *rest.Client, *objects.MessageReactionAdd):
		return newHandler(v), "message_reaction_add", nil
	case func(context.Context, *rest.Client, *objects.MessageReactionRemove):
		return newHandler(v), "message_reaction_remove", nil
	case func(context.Context, *rest.Client, *objects.MessageReactionRemoveAll):
		return newHandler(v), "message_reaction_remove_all", nil
	case func(context.Context, *rest.Client, *objects.MessageReactionRemoveEmoji):
		return newHandler(v), "message_reaction_remove_emoji", nil
	case func(context.Context, *rest.Client, *objects.PresenceUpdate):
		return newHandler(v), "presence_update", nil
	case func(context.Context, *rest.Client, *objects.TypingStart):
		return newHandler(v), "typing_start", nil
	case func(context.Context, *rest.Client, *objects.UserUpdate):
		return newHandler(v), "user_update", nil
	case func(context.Context, *rest.Client, *objects.VoiceStateUpdate):
		return newHandler(v), "voice_state_update", nil
	case func(context.Context, *rest.Client, *objects.VoiceServerUpdate):
		return newHandler(v), "voice_server_update", nil
	case func(context.Context, *rest.Client, *objects.WebhooksUpdate):
		return newHandler(v), "webhooks_update", nil
	case func(context.Context, *rest.Client, *objects.InteractionCreate):
		return newHandler(v), "interaction_create", nil
	case func(context.Context, *rest.Client, *objects.StageInstanceCreate):
		return newHandler(v), "stage_instance_create", nil
	case func(context.Context, *rest.Client, *objects.StageInstanceUpdate):
		return newHandler(v), "stage_instance_update", nil
	case func(context.Context, *rest.Client, *objects.StageInstanceDelete):
		return newHandler(v), "stage_instance_delete", nil
	default:
		return nil, "invalid", fmt.Errorf("invalid handler func")
	}
}
