// Code generated by generate_response_builder.go; DO NOT EDIT.

package router

//go:generate go run generate_response_builder.go

import "github.com/Postcord/objects"

// SetEmbed is used to set the embed, overwriting any previously.
func (c *ComponentRouterCtx) SetEmbed(embed *objects.Embed) *ComponentRouterCtx {
	c.editEmbed(embed, false)
	return c
}

// AddEmbed is used to append the embed, joining any previously.
func (c *ComponentRouterCtx) AddEmbed(embed *objects.Embed) *ComponentRouterCtx {
	c.editEmbed(embed, true)
	return c
}

// AddComponentRow is used to add a row of components.
func (c *ComponentRouterCtx) AddComponentRow(row []*objects.Component) *ComponentRouterCtx {
	component := &objects.Component{Type: objects.ComponentTypeActionRow, Components: row}
	response := c.ResponseData()
	response.Components = append(response.Components, component)
	return c
}

// SetComponentRows is used to set rows of components.
func (c *ComponentRouterCtx) SetComponentRows(rows [][]*objects.Component) *ComponentRouterCtx {
	components := make([]*objects.Component, len(rows))
	for i, v := range rows {
		components[i] = &objects.Component{Type: objects.ComponentTypeActionRow, Components: v}
	}
	c.ResponseData().Components = components
	return c
}

// ClearComponents is used to clear the components in a response.
func (c *ComponentRouterCtx) ClearComponents() *ComponentRouterCtx {
	c.ResponseData().Components = []*objects.Component{}
	return c
}

// SetContent is used to set the content of a response.
func (c *ComponentRouterCtx) SetContent(content string) *ComponentRouterCtx {
	c.ResponseData().Content = content
	return c
}

// SetAllowedMentions is used to set the allowed mentions of a response. This will override your global configuration.
func (c *ComponentRouterCtx) SetAllowedMentions(config *objects.AllowedMentions) *ComponentRouterCtx {
	c.ResponseData().AllowedMentions = config
	return c
}

// SetTTS is used to set the TTS configuration for your response.
func (c *ComponentRouterCtx) SetTTS(tts bool) *ComponentRouterCtx {
	c.ResponseData().TTS = tts
	return c
}

// Ephemeral is used to set the response as ephemeral.
func (c *ComponentRouterCtx) Ephemeral() *ComponentRouterCtx {
	c.ResponseData().Flags = 64
	return c
}

// SetEmbed is used to set the embed, overwriting any previously.
func (c *CommandRouterCtx) SetEmbed(embed *objects.Embed) *CommandRouterCtx {
	c.editEmbed(embed, false)
	return c
}

// AddEmbed is used to append the embed, joining any previously.
func (c *CommandRouterCtx) AddEmbed(embed *objects.Embed) *CommandRouterCtx {
	c.editEmbed(embed, true)
	return c
}

// AddComponentRow is used to add a row of components.
func (c *CommandRouterCtx) AddComponentRow(row []*objects.Component) *CommandRouterCtx {
	component := &objects.Component{Type: objects.ComponentTypeActionRow, Components: row}
	response := c.ResponseData()
	response.Components = append(response.Components, component)
	return c
}

// SetComponentRows is used to set rows of components.
func (c *CommandRouterCtx) SetComponentRows(rows [][]*objects.Component) *CommandRouterCtx {
	components := make([]*objects.Component, len(rows))
	for i, v := range rows {
		components[i] = &objects.Component{Type: objects.ComponentTypeActionRow, Components: v}
	}
	c.ResponseData().Components = components
	return c
}

// ClearComponents is used to clear the components in a response.
func (c *CommandRouterCtx) ClearComponents() *CommandRouterCtx {
	c.ResponseData().Components = []*objects.Component{}
	return c
}

// SetContent is used to set the content of a response.
func (c *CommandRouterCtx) SetContent(content string) *CommandRouterCtx {
	c.ResponseData().Content = content
	return c
}

// SetAllowedMentions is used to set the allowed mentions of a response. This will override your global configuration.
func (c *CommandRouterCtx) SetAllowedMentions(config *objects.AllowedMentions) *CommandRouterCtx {
	c.ResponseData().AllowedMentions = config
	return c
}

// SetTTS is used to set the TTS configuration for your response.
func (c *CommandRouterCtx) SetTTS(tts bool) *CommandRouterCtx {
	c.ResponseData().TTS = tts
	return c
}

// Ephemeral is used to set the response as ephemeral.
func (c *CommandRouterCtx) Ephemeral() *CommandRouterCtx {
	c.ResponseData().Flags = 64
	return c
}
