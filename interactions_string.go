// Code generated by "stringer -type=ApplicationCommandOptionType,InteractionType,ResponseType,ApplicationCommandType,ButtonStyle,ComponentType,TextStyle,ApplicationCommandPermissionType -output interactions_string.go"; DO NOT EDIT.

package objects

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeSubCommand-1]
	_ = x[TypeSubCommandGroup-2]
	_ = x[TypeString-3]
	_ = x[TypeInteger-4]
	_ = x[TypeBoolean-5]
	_ = x[TypeUser-6]
	_ = x[TypeChannel-7]
	_ = x[TypeRole-8]
	_ = x[TypeMentionable-9]
	_ = x[TypeNumber-10]
}

const _ApplicationCommandOptionType_name = "TypeSubCommandTypeSubCommandGroupTypeStringTypeIntegerTypeBooleanTypeUserTypeChannelTypeRoleTypeMentionableTypeNumber"

var _ApplicationCommandOptionType_index = [...]uint8{0, 14, 33, 43, 54, 65, 73, 84, 92, 107, 117}

func (i ApplicationCommandOptionType) String() string {
	i -= 1
	if i < 0 || i >= ApplicationCommandOptionType(len(_ApplicationCommandOptionType_index)-1) {
		return "ApplicationCommandOptionType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ApplicationCommandOptionType_name[_ApplicationCommandOptionType_index[i]:_ApplicationCommandOptionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InteractionRequestPing-1]
	_ = x[InteractionApplicationCommand-2]
	_ = x[InteractionComponent-3]
	_ = x[InteractionAutoComplete-4]
	_ = x[InteractionModalSubmit-5]
}

const _InteractionType_name = "InteractionRequestPingInteractionApplicationCommandInteractionComponentInteractionAutoCompleteInteractionModalSubmit"

var _InteractionType_index = [...]uint8{0, 22, 51, 71, 94, 116}

func (i InteractionType) String() string {
	i -= 1
	if i < 0 || i >= InteractionType(len(_InteractionType_index)-1) {
		return "InteractionType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _InteractionType_name[_InteractionType_index[i]:_InteractionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ResponsePong-1]
	_ = x[ResponseChannelMessageWithSource-4]
	_ = x[ResponseDeferredChannelMessageWithSource-5]
	_ = x[ResponseDeferredMessageUpdate-6]
	_ = x[ResponseUpdateMessage-7]
	_ = x[ResponseCommandAutocompleteResult-8]
	_ = x[ResponseModal-9]
}

const (
	_ResponseType_name_0 = "ResponsePong"
	_ResponseType_name_1 = "ResponseChannelMessageWithSourceResponseDeferredChannelMessageWithSourceResponseDeferredMessageUpdateResponseUpdateMessageResponseCommandAutocompleteResultResponseModal"
)

var (
	_ResponseType_index_1 = [...]uint8{0, 32, 72, 101, 122, 155, 168}
)

func (i ResponseType) String() string {
	switch {
	case i == 1:
		return _ResponseType_name_0
	case 4 <= i && i <= 9:
		i -= 4
		return _ResponseType_name_1[_ResponseType_index_1[i]:_ResponseType_index_1[i+1]]
	default:
		return "ResponseType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CommandTypeChatInput-1]
	_ = x[CommandTypeUser-2]
	_ = x[CommandTypeMessage-3]
}

const _ApplicationCommandType_name = "CommandTypeChatInputCommandTypeUserCommandTypeMessage"

var _ApplicationCommandType_index = [...]uint8{0, 20, 35, 53}

func (i ApplicationCommandType) String() string {
	i -= 1
	if i < 0 || i >= ApplicationCommandType(len(_ApplicationCommandType_index)-1) {
		return "ApplicationCommandType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ApplicationCommandType_name[_ApplicationCommandType_index[i]:_ApplicationCommandType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonStylePrimary-1]
	_ = x[ButtonStyleSecondary-2]
	_ = x[ButtonStyleSuccess-3]
	_ = x[ButtonStyleDanger-4]
	_ = x[ButtonStyleLink-5]
}

const _ButtonStyle_name = "ButtonStylePrimaryButtonStyleSecondaryButtonStyleSuccessButtonStyleDangerButtonStyleLink"

var _ButtonStyle_index = [...]uint8{0, 18, 38, 56, 73, 88}

func (i ButtonStyle) String() string {
	i -= 1
	if i < 0 || i >= ButtonStyle(len(_ButtonStyle_index)-1) {
		return "ButtonStyle(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ButtonStyle_name[_ButtonStyle_index[i]:_ButtonStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ComponentTypeActionRow-1]
	_ = x[ComponentTypeButton-2]
	_ = x[ComponentTypeSelectMenu-3]
	_ = x[ComponentTypeInputText-4]
}

const _ComponentType_name = "ComponentTypeActionRowComponentTypeButtonComponentTypeSelectMenuComponentTypeInputText"

var _ComponentType_index = [...]uint8{0, 22, 41, 64, 86}

func (i ComponentType) String() string {
	i -= 1
	if i < 0 || i >= ComponentType(len(_ComponentType_index)-1) {
		return "ComponentType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ComponentType_name[_ComponentType_index[i]:_ComponentType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TextStyleShort-1]
	_ = x[TextStyleParagraph-2]
}

const _TextStyle_name = "TextStyleShortTextStyleParagraph"

var _TextStyle_index = [...]uint8{0, 14, 32}

func (i TextStyle) String() string {
	i -= 1
	if i < 0 || i >= TextStyle(len(_TextStyle_index)-1) {
		return "TextStyle(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TextStyle_name[_TextStyle_index[i]:_TextStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PermissionTypeRole-1]
	_ = x[PermissionTypeUser-2]
}

const _ApplicationCommandPermissionType_name = "PermissionTypeRolePermissionTypeUser"

var _ApplicationCommandPermissionType_index = [...]uint8{0, 18, 36}

func (i ApplicationCommandPermissionType) String() string {
	i -= 1
	if i < 0 || i >= ApplicationCommandPermissionType(len(_ApplicationCommandPermissionType_index)-1) {
		return "ApplicationCommandPermissionType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ApplicationCommandPermissionType_name[_ApplicationCommandPermissionType_index[i]:_ApplicationCommandPermissionType_index[i+1]]
}
